<!-- Dipayan Sarker, February 10, 2020 -->
<Page x:Class="BankManager.Views.Pages.UpdatePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800" x:Name="mainPage"
      Height="{StaticResource PageHeight}" Width="{StaticResource PageWidth}" 
      Title="UpdatePage" Background="{StaticResource PageBackground}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <TextBlock Text="Update Account Info" Style="{Binding Source={StaticResource PageTitleStyle}}"/>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="8*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Margin="5">
                <TextBlock Text="Account No." Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="First Name" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Last Name" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Address" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Date of Birth" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Personal No." Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Place of Birth" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Citizenship" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Sex" Margin="3 3 0 10" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Civil Status" Margin="3 3 0 10" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Phone No." Margin="3 2 0 10" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                <TextBlock Text="Email" Margin="3 0 0 10" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Margin="5">
                <TextBox MaxLength="8" Text="{Binding ClientAccountNumber, 
                        Converter={StaticResource int32ToStringConverter}, Mode=TwoWay, UpdateSourceTrigger=Default}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PageTextBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateAccountUIElement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="Background" Value="#E7E7E7"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <TextBox Text="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="40">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PageTextBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="Background" Value="#E7E7E7"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <TextBox Text="{Binding LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="25">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PageTextBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="Background" Value="#E7E7E7"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <TextBox Text="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="200">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PageTextBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="Background" Value="#E7E7E7"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <TextBox Text="{Binding DOB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="300" HorizontalAlignment="Left" Margin="80 0 0 10" IsReadOnly="True" Background="#E7E7E7" Style="{Binding Source={StaticResource PageTextBoxStyle}}"/>
                <StackPanel Orientation="Horizontal">
                    <TextBox Text="{Binding DOB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="230" Background="#E7E7E7" Style="{Binding Source={StaticResource PageTextBoxStyle}}"/>
                    <TextBlock Text="-" Style="{Binding Source={StaticResource PageLabelStyle}}"/>
                    <TextBox Text="{Binding PersonNomberSecret, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="56" HorizontalAlignment="Left" Margin="5 0 0 10" MaxLength="4" Background="#E7E7E7" Style="{Binding Source={StaticResource PageTextBoxStyle}}"/>
                </StackPanel>
                <TextBox Text="{Binding PlaceOfBirth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Background="#E7E7E7" MaxLength="40" Style="{Binding Source={StaticResource PageTextBoxStyle}}"/>
                <ComboBox ItemsSource="{Binding AllCountryList}"
                          SelectedItem="{Binding Citizenship, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedIndex="{Binding SelectedIndexAllCountryCombobox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource PageComboBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <ComboBox ItemsSource="{Binding AllSexList}"
                          SelectedItem="{Binding Sex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedIndex="{Binding SelectedIndexSex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource PageComboBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <ComboBox ItemsSource="{Binding AllCivilStatusList}"
                          SelectedItem="{Binding CivilStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedIndex="{Binding SelectedIndexCivilStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource PageComboBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
                <TextBox Text="{Binding PhoneNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="15">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PageTextBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="Background" Value="#E7E7E7"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <TextBox Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="60">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PageTextBoxStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvalidateOtherUIElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="Background" Value="#E7E7E7"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="2" Style="{Binding Source={StaticResource PageBottomStackPanelStyle}}">
            <Button Command="{Binding FetchCommand}" Content="Fetch" Style="{Binding Source={StaticResource PageButtonStyle}}"/>
            <Button Command="{Binding EditCommand}" Content="Edit" Style="{Binding Source={StaticResource PageButtonStyle}}"/>
            <Button Command="{Binding UpdateCommand}" CommandParameter="{Binding ElementName=mainPage}" Content="Update" Style="{Binding Source={StaticResource PageButtonStyle}}"/>
            <Button Command="{Binding CancelCommand}" CommandParameter="{Binding ElementName=mainPage}" Content="Cancel" Style="{Binding Source={StaticResource PageButtonStyle}}"/>
        </StackPanel>
    </Grid>
</Page>
