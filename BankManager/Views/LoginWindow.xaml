<!-- Dipayan Sarker, February 10, 2020 -->
<Window x:Class="BankManager.Views.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:multiconvert="clr-namespace:BankManager.Converters"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="LoginWindow" x:Name="loginWindow" Height="400" Width="400"
        ShowInTaskbar="False" WindowStyle="None" AllowsTransparency="True"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <multiconvert:MultiValueConverter x:Key="multiValueConverter"/>
    </Window.Resources>
    <Window.Background>
        <RadialGradientBrush>
            <GradientStop Color="#FFE4ABFF"/>
            <GradientStop Color="#FFE9DAF0" Offset="0.914"/>
        </RadialGradientBrush>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="9*"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Background="Transparent">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown" >
                    <i:InvokeCommandAction Command="{Binding DragMoveCommand}" CommandParameter="{Binding ElementName=loginWindow}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid DockPanel.Dock="Top" Height="22">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Margin="20 0 0 0" FontSize="15" Height="22" Width="20" FontWeight="Bold" Background="Red" Foreground="White" Command="{Binding WindowCloseCommand}" CommandParameter="{Binding ElementName=loginWindow}">
                        <TextBlock Text="X" Margin="1 -3 0 0"/>
                    </Button>
                </StackPanel>
            </Grid>
        </DockPanel>
        <StackPanel Grid.Row="1">
            <StackPanel Orientation="Vertical" Margin="5">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="Log in" Margin="0 40 0 20" FontSize="30" FontWeight="UltraBold" Foreground="#D7957B"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Grid>
                        <TextBox BorderThickness="0" Width="200" MaxLength="16" Padding="2 4 2 4" Height="30" VerticalAlignment="Top" TextAlignment="Left" x:Name="txtUser" Text="{Binding Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" Foreground="Red"/>
                        <TextBlock IsHitTestVisible="False" Text="Username" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10 0 0 0" Foreground="Black">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=txtUser, UpdateSourceTrigger=PropertyChanged}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Grid>
                        <PasswordBox x:Name="passBox" BorderThickness="0" Width="200" MaxLength="16" Padding="2 4 2 4" Height="30" VerticalAlignment="Top" Margin="5" Foreground="Red">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PasswordChanged">
                                    <i:InvokeCommandAction Command="{Binding ResetPasswordBoxCommand}">
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource multiValueConverter}" >
                                                <Binding ElementName="passBox"/>
                                                <Binding ElementName="tempText"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction> 
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </PasswordBox>
                        <TextBlock x:Name="tempText" IsHitTestVisible="False" Text="Password" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10 0 0 0" Foreground="Black"/>
                    </Grid>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 15 0 0">
                <Button x:Name="btnSubmit" Content="Submit" Background="Transparent" BorderThickness="0" Command="{Binding ButtonSubmitCommand}" CommandParameter="{Binding ElementName=passBox}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="FontSize" Value="15"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
